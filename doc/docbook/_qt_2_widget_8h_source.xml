<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__qt_2_widget_8h_source" xml:lang="ru">
<title>Widget.h</title>
<indexterm><primary>View/Include/View/Qt/Widget.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;View/Export.h&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;View/Precompile.h&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;View/Forwards.h&gt;</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&lt;Model/AbstractModel.h&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;Controller/MoveController.h&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&lt;View/Qt/Map.h&gt;</emphasis>
10 <emphasis role="preprocessor">#include&#32;&lt;View/Qt/PreviewBlock.h&gt;</emphasis>
11 
12 
13 <emphasis role="keyword">namespace&#32;</emphasis>Tetris::View::Qt
14 {
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>VIEW_EXPORT&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_widget">Widget</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;QWidget
22 &#32;&#32;&#32;&#32;{
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Q_OBJECT&#32;
24 
25 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_widget">Widget</link>(QWidget*&#32;parent&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>);
32 
33 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;keyPressEvent(QKeyEvent&#32;*event)&#32;<emphasis role="keyword">override</emphasis>;
40 
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;paintEvent(QPaintEvent&#32;*event)&#32;<emphasis role="keyword">override</emphasis>;
47 
48 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setupMapContainer();
54 
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setupPreviewContainer();
60 
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QFont&#32;createScoreFont();
66 
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QLabel*&#32;createScoreLabel();
72 
73 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;slots:
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SlotUpdateView(DescriptionModelPtr&#32;descp);
79 
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DescriptionModelPtr&#32;GetDescriptionModel();
85 
86 &#32;&#32;&#32;&#32;signals:
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_widget_1aec4e05e511e45a84480446426c79a4e3">SignalUpdateModel</link>(Model::Command&#32;command);
92 
93 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_map">Map</link>*&#32;_map;&#32;
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QLabel*&#32;_text;&#32;
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_preview_block">PreviewBlock</link>*&#32;_preview;&#32;
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::mutex&#32;_mutex;&#32;
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DescriptionModelPtr&#32;_descriptionModel;&#32;
101 &#32;&#32;&#32;&#32;};
102 }&#32;<emphasis role="comment">//&#32;namespace&#32;Tetris::View::Qt</emphasis>
103 
</programlisting></section>
