<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__q_adapter_widget_8h_source" xml:lang="ru">
<title>QAdapterWidget.h</title>
<indexterm><primary>View/Include/View/Qt/QAdapterWidget.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;View/Export.h&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;View/Qt/Widget.h&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;View/Qt/KeyPressFilter.h&gt;</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&lt;Controller/MoveController.h&gt;</emphasis>
8 
9 
10 <emphasis role="keyword">namespace&#32;</emphasis>Tetris::View::Qt
11 {
13 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>VIEW_EXPORT&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter">Adapter</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;QObject
14 &#32;&#32;&#32;&#32;{
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Q_OBJECT
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1a598b483a1b8c00cc5cbe345cf1fc6084">Adapter</link>(AbstractModelPtr&#32;model):&#32;_controller(model)&#32;{}
20 
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1a3ab761d9a0c5d4ca4543e49c325e8929">CreateWidget</link>()
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_widget">Widget</link>*&#32;widget&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_widget">Widget</link>();
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetConnection(widget);&#32;<emphasis role="comment">//&#32;Устанавливаем&#32;соединения&#32;сигналов&#32;и&#32;слотов</emphasis>
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;widget-&gt;show();&#32;<emphasis role="comment">//&#32;Показываем&#32;виджет</emphasis>
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
28 
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1a71a610aa04d1b3ff5342514c5f7aa4d2">CloseWidgets</link>()
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;emit&#32;signalCloseWidget();&#32;<emphasis role="comment">//&#32;Генерируем&#32;сигнал&#32;закрытия&#32;виджетов</emphasis>
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
34 
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1aa1001c60fd7b25b20c1d1f8b30a37a92">UpdateWidgets</link>(DescriptionModelPtr&#32;desc)
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;emit&#32;signalUpdateWidget(desc);&#32;<emphasis role="comment">//&#32;Генерируем&#32;сигнал&#32;обновления&#32;виджетов</emphasis>
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
41 
42 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;slots:
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1a7813cf568f0d8d30988df86ab5e7fba3">SlotUpdateModel</link>(Model::Command&#32;cmd)
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_controller.Move(cmd);&#32;<emphasis role="comment">//&#32;Передаем&#32;команду&#32;контроллеру</emphasis>
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
49 
50 &#32;&#32;&#32;&#32;signals:
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1accd01d00325ba6e4be8e406f5f59b1c2">signalUpdateWidget</link>(DescriptionModelPtr&#32;desc);
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1accaa9b22cf77a21108e39aac006d87a7">signalCloseWidget</link>();
55 
56 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetConnection(<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_widget">Widget</link>*&#32;ptr)
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;connect(<emphasis role="keyword">this</emphasis>,&#32;&amp;Adapter::signalCloseWidget,&#32;ptr,&#32;&amp;Widget::close);
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;connect(<emphasis role="keyword">this</emphasis>,&#32;&amp;Adapter::signalUpdateWidget,&#32;ptr,&#32;&amp;Widget::SlotUpdateView);
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;connect(ptr,&#32;&amp;Widget::SignalUpdateModel,&#32;<emphasis role="keyword">this</emphasis>,&#32;&amp;Adapter::SlotUpdateModel);
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
65 
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_controller_1_1_move_controller">Controller::MoveController</link>&#32;_controller;&#32;
67 &#32;&#32;&#32;&#32;};
68 
69 
71 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_tetris_1_1_view_1_1_qt_1_1_q_adapter_widget">QAdapterWidget</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_tetris_1_1_model_1_1_abstract_widget">Model::AbstractWidget</link>
72 &#32;&#32;&#32;&#32;{
73 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_q_adapter_widget_1a03961780240b1c253046bd8fdbccd2da">QAdapterWidget</link>(AbstractModelPtr&#32;model):&#32;AbstractWidget(),&#32;_adapter(new&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter">Adapter</link>(model))&#32;{}
77 
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_q_adapter_widget_1add2bb9efe338a1de33aaf6a011d7aecb">Update</link>()<emphasis role="keyword">&#32;override&#32;</emphasis>{}
80 
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_q_adapter_widget_1ad38d9aab92ce4a798b361c0c82436b1e">SlotUpdateWidget</link>(DescriptionModelPtr&#32;descp)<emphasis role="keyword">&#32;override</emphasis>
84 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_adapter-&gt;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1aa1001c60fd7b25b20c1d1f8b30a37a92">UpdateWidgets</link>(descp);&#32;<emphasis role="comment">//&#32;Передаем&#32;обновление&#32;адаптеру</emphasis>
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
87 
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_q_adapter_widget_1a58022da2d43f608c5a0014254292ac30">IsOpen</link>()<emphasis role="keyword">&#32;const&#32;override</emphasis>
91 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;<emphasis role="comment">//&#32;Здесь&#32;можно&#32;добавить&#32;логику&#32;для&#32;проверки&#32;состояния</emphasis>
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
94 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_q_adapter_widget_1a5aef349f3da2634748db811f234c4172">SlotCloseWidget</link>()<emphasis role="keyword">&#32;override</emphasis>
97 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_adapter-&gt;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1a71a610aa04d1b3ff5342514c5f7aa4d2">CloseWidgets</link>();&#32;<emphasis role="comment">//&#32;Передаем&#32;запрос&#32;на&#32;закрытие&#32;адаптеру</emphasis>
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
100 
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_q_adapter_widget_1aca71932f4ca1d7a646e227b7348575dc">CreateWidget</link>()
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_adapter-&gt;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter_1a3ab761d9a0c5d4ca4543e49c325e8929">CreateWidget</link>();&#32;<emphasis role="comment">//&#32;Передаем&#32;запрос&#32;на&#32;создание&#32;виджета&#32;адаптеру</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
106 
107 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_adapter">Adapter</link>*&#32;_adapter;&#32;
109 &#32;&#32;&#32;&#32;};
110 }
</programlisting></section>
