<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__view_2_include_2_view_2_qt_2_map_8h_source" xml:lang="ru">
<title>Map.h</title>
<indexterm><primary>View/Include/View/Qt/Map.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;View/Export.h&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;View/Precompile.h&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;Model/Types.h&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;View/Forwards.h&gt;</emphasis>
7 
8 <emphasis role="preprocessor">#include&#32;&lt;Model/AbstractModel.h&gt;</emphasis>
9 
10 
11 <emphasis role="keyword">namespace&#32;</emphasis>Tetris::View::Qt
12 {
16 &#32;&#32;&#32;&#32;QColor&#32;ColorFromTypeColor(Model::TypeColor&#32;color);
17 
18 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>VIEW_EXPORT&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_map">Map</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;QWindow
19 &#32;&#32;&#32;&#32;{
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Q_OBJECT
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_qt_1_1_map">Map</link>(QWindow&#32;*parent,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;withBorder&#32;=&#32;<emphasis role="keyword">false</emphasis>);
26 
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetMap(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;Model::TypeColor&gt;&amp;&#32;map,&#32;<link linkend="_struct_tetris_1_1_model_1_1_map_size">Model::MapSize</link>&#32;size);
31 
32 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;event(QEvent&#32;*event)&#32;<emphasis role="keyword">override</emphasis>;
37 
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;resizeEvent(QResizeEvent&#32;*event)&#32;<emphasis role="keyword">override</emphasis>;
41 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;exposeEvent(QExposeEvent&#32;*event)&#32;<emphasis role="keyword">override</emphasis>;
45 
46 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;renderLater();
49 
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;renderNow();
52 
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;render(QPainter&#32;*painter);
56 
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateView();
59 
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializeBorders();
62 
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sf::RectangleShape&#32;CreateBorder(<emphasis role="keyword">const</emphasis>&#32;sf::Vector2f&amp;&#32;size,&#32;<emphasis role="keyword">const</emphasis>&#32;sf::Vector2f&amp;&#32;position);
68 
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateFieldSizes();
71 
72 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QBackingStore&#32;*m_backingStore&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;&#32;
74 
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;Model::TypeColor&gt;&#32;_map;
77 
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sf::Vector2f&#32;_windowSize;
80 
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_rows;&#32;
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_columns;&#32;
83 
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_offsetX;&#32;
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_offsetY;&#32;
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_borderWidth{0};&#32;
88 
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QVector&lt;QRect&gt;&#32;_borders;&#32;
90 &#32;&#32;&#32;&#32;};
91 }
</programlisting></section>
