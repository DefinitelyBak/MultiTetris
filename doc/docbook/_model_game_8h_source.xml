<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__model_game_8h_source" xml:lang="ru">
<title>ModelGame.h</title>
<indexterm><primary>Model/Include/Model/ModelGame.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;Model/Export.h&gt;</emphasis>
4 
5 <emphasis role="preprocessor">#include&#32;&lt;Model/Precompile.h&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;Model/Forwards.h&gt;</emphasis>
7 
8 <emphasis role="preprocessor">#include&#32;&lt;Model/Types.h&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&lt;Model/AbstractModel.h&gt;</emphasis>
10 <emphasis role="preprocessor">#include&#32;&lt;Model/Map.h&gt;</emphasis>
11 <emphasis role="preprocessor">#include&#32;&lt;Model/Factory/BlocksFactory.h&gt;</emphasis>
12 
13 
14 <emphasis role="keyword">namespace&#32;</emphasis>Tetris::Model
15 {
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>MODEL_EXPORT&#32;<link linkend="_class_tetris_1_1_model_1_1_model_game">ModelGame</link>&#32;final&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_tetris_1_1_model_1_1_abstract_model">AbstractModel</link>
21 &#32;&#32;&#32;&#32;{
22 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_model_1_1_model_game">ModelGame</link>();
27 
28 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateModel(Command&#32;command,&#32;DescriptionModelPtr&amp;&#32;desc)&#32;<emphasis role="keyword">override</emphasis>;
37 
38 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddScore(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;lines);
45 
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AbstractBlockPtr&#32;CreateRandomBlock(AbstractBlockPtr&#32;withoutBlock&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>);
54 
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AbstractBlockPtr&#32;CreateBlock(<emphasis role="keyword">const</emphasis>&#32;std::array&lt;TypeBlock,&#32;7&gt;&amp;&#32;blockTypes,&#32;<emphasis role="keyword">const</emphasis>&#32;std::array&lt;TypeColor,&#32;4&gt;&amp;&#32;colorTypes);
63 
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AbstractBlockPtr&#32;CreateBlockExcluding(AbstractBlockPtr&#32;withoutBlock,&#32;<emphasis role="keyword">const</emphasis>&#32;std::array&lt;TypeBlock,&#32;7&gt;&amp;&#32;blockTypes,&#32;<emphasis role="keyword">const</emphasis>&#32;std::array&lt;TypeColor,&#32;4&gt;&amp;&#32;colorTypes);
73 
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FillExcludingArray(<emphasis role="keyword">const</emphasis>&#32;std::array&lt;T,&#32;N&gt;&amp;&#32;source,&#32;T&#32;excluded,&#32;std::array&lt;T,&#32;N-1&gt;&amp;&#32;dest);
87 
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;RegisterBlocks();
93 
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ResetGame(DescriptionModelPtr&#32;&amp;desc);
101 
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateScore(DescriptionModelPtr&#32;&amp;desc);
109 
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SpawnNewBlock(DescriptionModelPtr&#32;&amp;desc);
117 
118 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_model_1_1_map">Map</link>&#32;_map;&#32;<emphasis role="comment">//&lt;&#32;Карта&#32;игры,&#32;представляющая&#32;игровое&#32;поле</emphasis>
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_model_1_1_blocks_1_1_blocks_factory">Blocks::BlocksFactory</link>&#32;_factory;&#32;<emphasis role="comment">//&lt;&#32;Фабрика&#32;блоков&#32;для&#32;создания&#32;игровых&#32;блоков</emphasis>
122 
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_score{0};&#32;<emphasis role="comment">//&lt;&#32;Текущий&#32;счет&#32;игрока</emphasis>
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::random_device&#32;_device;&#32;<emphasis role="comment">//&lt;&#32;Генератор&#32;случайных&#32;чисел&#32;для&#32;выбора&#32;блоков</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::mt19937&#32;_randomEngine;&#32;<emphasis role="comment">//&lt;&#32;Двигатель&#32;случайных&#32;чисел&#32;для&#32;генерации&#32;случайных&#32;значений</emphasis>
127 
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AbstractBlockPtr&#32;_currentBlock;&#32;<emphasis role="comment">//&lt;&#32;Текущий&#32;активный&#32;блок,&#32;который&#32;управляется&#32;игроком</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AbstractBlockPtr&#32;_nextBlock;&#32;<emphasis role="comment">//&lt;&#32;Следующий&#32;блок,&#32;который&#32;будет&#32;использоваться&#32;в&#32;игре</emphasis>
130 &#32;&#32;&#32;&#32;};
131 }&#32;<emphasis role="comment">//&#32;namespace&#32;Tetris::Model</emphasis>
</programlisting></section>
