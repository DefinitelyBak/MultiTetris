<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__s_f_m_l_application_8h_source" xml:lang="ru">
<title>SFMLApplication.h</title>
<indexterm><primary>View/Include/View/SFML/SFMLApplication.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;View/Export.h&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;View/Precompile.h&gt;</emphasis>
5 
6 <emphasis role="preprocessor">#include&#32;&lt;View/Forwards.h&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;Model/AbstractModel.h&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;View/IApplication.h&gt;</emphasis>
9 
10 
11 <emphasis role="keyword">namespace&#32;</emphasis>Tetris::View::SFML{
14 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>VIEW_EXPORT&#32;<link linkend="_class_tetris_1_1_view_1_1_s_f_m_l_1_1_s_f_m_l_application">SFMLApplication</link>&#32;final:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_tetris_1_1_view_1_1_i_application">IApplication</link>
15 &#32;&#32;&#32;&#32;{
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_s_f_m_l_1_1_s_f_m_l_application">SFMLApplication</link>(AbstractModelPtr&#32;model,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;countWidgets,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;fontPath);
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tetris_1_1_view_1_1_s_f_m_l_1_1_s_f_m_l_application">~SFMLApplication</link>();
25 
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Run()&#32;<emphasis role="keyword">override</emphasis>;
28 
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isExecution()&#32;<emphasis role="keyword">const&#32;override</emphasis>;&#32;
32 
33 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CreateWidgets();
36 
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateWidgets();
39 
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;_pathFont;&#32;
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_count;&#32;
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::list&lt;AbstractWidgetPtr&gt;&#32;_widgets;&#32;
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AbstractModelPtr&#32;_model;&#32;
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::thread&#32;_thread;&#32;
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::atomic&lt;bool&gt;&#32;_execution;&#32;
46 &#32;&#32;&#32;&#32;};
47 }&#32;<emphasis role="comment">//&#32;namespace&#32;Tetris::View::SFML</emphasis>
</programlisting></section>
