.TH "Tetris::View::Qt::Widget" 3 "MultiTetris" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Tetris::View::Qt::Widget \- Класс, представляющий виджет для отображения игры Tetris\&. Состояние карты меняется только из методов UpdateView, просто надо какие события создают перерисовку содержимого\&. 
.br
  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <Widget\&.h>\fP
.PP
Базовые классы:QWidget\&.
.SS "Открытые слоты"

.in +1c
.ti -1c
.RI "void \fBSlotUpdateView\fP (DescriptionModelPtr descp)"
.br
.RI "Слот для обновления представления на основе модели описания\&. "
.ti -1c
.RI "DescriptionModelPtr \fBGetDescriptionModel\fP ()"
.br
.RI "Получает текущее состояние модели описания\&. "
.in -1c
.SS "Сигналы"

.in +1c
.ti -1c
.RI "void \fBSignalUpdateModel\fP (Model::Command command)"
.br
.RI "Сигнал для обновления модели с командой\&. "
.in -1c
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "\fBWidget\fP (QWidget *parent=nullptr)"
.br
.RI "Конструктор класса \fBWidget\fP\&. Инициализирует родительский виджет\&. "
.in -1c
.SS "Защищенные члены"

.in +1c
.ti -1c
.RI "void \fBkeyPressEvent\fP (QKeyEvent *event) override"
.br
.RI "Обрабатывает события нажатия клавиш\&. Переопределяет метод keyPressEvent для обработки нажатий клавиш\&. "
.ti -1c
.RI "void \fBpaintEvent\fP (QPaintEvent *event) override"
.br
.RI "Обрабатывает события перерисовки виджета\&. Переопределяет метод paintEvent для обновления содержимого виджета\&. "
.in -1c
.SH "Подробное описание"
.PP 
Класс, представляющий виджет для отображения игры Tetris\&. Состояние карты меняется только из методов UpdateView, просто надо какие события создают перерисовку содержимого\&. 
.br
 
.SH "Конструктор(ы)"
.PP 
.SS "Tetris::View::Qt::Widget::Widget (QWidget * parent = \fRnullptr\fP)"

.PP
Конструктор класса \fBWidget\fP\&. Инициализирует родительский виджет\&. 
.PP
\fBАргументы\fP
.RS 4
\fIparent\fP Указатель на родительский виджет, по умолчанию nullptr\&. 
.RE
.PP

.SH "Методы"
.PP 
.SS "DescriptionModelPtr Tetris::View::Qt::Widget::GetDescriptionModel ()\fR [slot]\fP"

.PP
Получает текущее состояние модели описания\&. 
.PP
\fBВозвращает\fP
.RS 4
Текущая модель описания состояния игры\&. 
.RE
.PP

.SS "void Tetris::View::Qt::Widget::keyPressEvent (QKeyEvent * event)\fR [override]\fP, \fR [protected]\fP"

.PP
Обрабатывает события нажатия клавиш\&. Переопределяет метод keyPressEvent для обработки нажатий клавиш\&. 
.PP
\fBАргументы\fP
.RS 4
\fIevent\fP Указатель на событие нажатия клавиши\&. 
.RE
.PP

.SS "void Tetris::View::Qt::Widget::paintEvent (QPaintEvent * event)\fR [override]\fP, \fR [protected]\fP"

.PP
Обрабатывает события перерисовки виджета\&. Переопределяет метод paintEvent для обновления содержимого виджета\&. 
.PP
\fBАргументы\fP
.RS 4
\fIevent\fP Указатель на событие перерисовки\&. 
.br
 
.RE
.PP

.SS "void Tetris::View::Qt::Widget::SignalUpdateModel (Model::Command command)\fR [signal]\fP"

.PP
Сигнал для обновления модели с командой\&. 
.PP
\fBАргументы\fP
.RS 4
\fIcommand\fP Команда для обновления модели\&. 
.RE
.PP

.SS "void Tetris::View::Qt::Widget::SlotUpdateView (DescriptionModelPtr descp)\fR [slot]\fP"

.PP
Слот для обновления представления на основе модели описания\&. 
.PP
\fBАргументы\fP
.RS 4
\fIdescp\fP Модель описания, используемая для обновления представления\&. 
.RE
.PP


.SH "Автор"
.PP 
Автоматически создано Doxygen для MultiTetris из исходного текста\&.
